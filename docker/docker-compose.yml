version: '3.8'

services:
  # Ollama service for running LLaMA models
  ollama:
    image: ollama/ollama:latest
    container_name: transcript-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - transcript-network

  # Transcript Summarizer application
  transcripter:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: transcript-summarizer
    ports:
      - "7860:7860"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - MODEL_NAME=llama3
      - CHUNK_SIZE=2000
      - CHUNK_OVERLAP=200
      - TEMPERATURE=0.3
      - GRADIO_PORT=7860
    depends_on:
      ollama:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7860/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    networks:
      - transcript-network

  # Model initialization service (runs once to pull llama3)
  model-init:
    image: ollama/ollama:latest
    container_name: transcript-model-init
    depends_on:
      ollama:
        condition: service_healthy
    volumes:
      - ollama_data:/root/.ollama
    environment:
      - OLLAMA_HOST=http://ollama:11434
    command: >
      sh -c "
        echo 'Waiting for Ollama service...';
        sleep 10;
        echo 'Pulling llama3 model...';
        ollama pull llama3;
        echo 'Model initialization complete!';
      "
    networks:
      - transcript-network
    restart: "no"

volumes:
  ollama_data:
    driver: local

networks:
  transcript-network:
    driver: bridge
